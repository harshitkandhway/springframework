 When we write the guestBookService in Client with no annotation and we run the Client we get the error.

 1) GuestBookServices guestBookServices = injector.getBean(GuestBookServices.class);
    Exception in thread "main" org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'springframework.day1.GuestBookServices' available
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:351)
    	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
    	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1126)
    	at springframework.day1.Client.main(Client.java:9)

    No qualifying bean of type 'springframework.day1.GuestBookServices' available
    : The reason we are getting this error is the @Component annotation is missing in the GuestBookService class.

 2) ApplicationContext injector = new AnnotationConfigApplicationContext("springframework.day1");

 "C:\Program Files\Java\jdk1.8.0_121\bin\java.exe" "-javaagent:C:\Users\Harshit.Kandhway\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2019.2\lib\idea_rt.jar=60445:
  C:\Users\Harshit.Kandhway\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2019.2\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_121\jre\lib\charsets.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\deploy.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\access-bridge-64.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\cldrdata.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\dnsns.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jaccess.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\localedata.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunec.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunjce_provider.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\sunpkcs11.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\javaws.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\jce.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\jfxswt.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\management-agent.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_121\jre\lib\resources.jar;
  C:\Program Files\Java\jdk1.8.0_121\jre\lib\rt.jar;C:\dev\Day1\target\classes;
  C:\Users\Harshit.Kandhway\.m2\repository\org\springframework\spring-context\5.2.1.RELEASE\spring-context-5.2.1.RELEASE.jar;
  C:\Users\Harshit.Kandhway\.m2\repository\org\springframework\spring-aop\5.2.1.RELEASE\spring-aop-5.2.1.RELEASE.jar;
  C:\Users\Harshit.Kandhway\.m2\repository\org\springframework\spring-beans\5.2.1.RELEASE\spring-beans-5.2.1.RELEASE.jar;
  C:\Users\Harshit.Kandhway\.m2\repository\org\springframework\spring-core\5.2.1.RELEASE\spring-core-5.2.1.RELEASE.jar;
  C:\Users\Harshit.Kandhway\.m2\repository\org\springframework\spring-jcl\5.2.1.RELEASE\spring-jcl-5.2.1.RELEASE.jar;
  C:\Users\Harshit.Kandhway\.m2\repository\org\springframework\spring-expression\5.2.1.RELEASE\spring-expression-5.2.1.RELEASE.jar" springframework.day1.Client
 Nov 22, 2019 4:15:27 PM org.springframework.context.support.AbstractApplicationContext refresh
 WARNING: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'guestBookServices' defined in file [C:\dev\Day1\target\classes\springframework\decorator\GuestBookServices.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'springframework.day1.JpaRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
 Exception in thread "main" org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'guestBookServices' defined in file [C:\dev\Day1\target\classes\springframework\decorator\GuestBookServices.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'springframework.day1.JpaRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
 	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:787)
 	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:226)
 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)
 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
 	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
 	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
 	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
 	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
 	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
 	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
 	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
 	at org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:101)
 	at springframework.day1.Client.main(Client.java:8)
 Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'springframework.day1.JpaRepository' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1695)
 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1253)
 	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
 	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:874)
 	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:778)
 	... 14 more

 Process finished with exit code 1

 3) No qualifying bean of type 'springframework.day1.JpaRepository' available: expected at least 1 bean
 which qualifies as autowire candidate. Dependency annotations: {}

 Reason1 : (not true)
 The reason we are getting this error is because @Autowired annotation is missing for the parameter JpaRepository in GuestBookService class.
Moreover (Reason 2)
 We have missed the @Component annotation on the JpaRepository class.

 Important thing learned :
 @Autowired is not required when there is only one constructor written.That is when spring application context creates the bean it will use the
 constructor wriiten to instanciate the sub classes.

 But if there is a default constructor written then the parameterized constructor must have a constructor level injection by declaring @Autowired
 on the constructor or we can use field level DI.b point is writting @Autowired gets mandatory in that case otherwise we will get the error as:
Exception in thread "main" java.lang.NullPointerException
	at springframework.day1.GuestBookServices.create(GuestBookServices.java:28)
	at springframework.day1.Client.main(Client.java:11)

The null pointer exception is thrown due to the line :
1) in GuestBookService class:
if (spamChecker.isSpam(guestbookEntry.getContent())) {

2) when the create method is called from the client:
guestBookServices.create(new GuestBookEntry("Harshit","This is content for the message"),"192.168.10.1");


